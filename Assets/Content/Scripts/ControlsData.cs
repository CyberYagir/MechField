//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.0
//     from Assets/ProjectData/Misc/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Content.Scripts.Game.InputService
{
    public partial class @ControlsData: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @ControlsData()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""BasePC"",
            ""id"": ""c1062d5c-6a65-4396-879b-6f50f0c4ef74"",
            ""actions"": [
                {
                    ""name"": ""Moving"",
                    ""type"": ""Value"",
                    ""id"": ""37eeb62c-1a72-42f6-bc42-ecd42b423405"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""999bd855-1009-4e20-8906-cf23035993ba"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""14eee762-69ef-4cc1-9c2b-b18e101d93f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire1"",
                    ""type"": ""Button"",
                    ""id"": ""0d0dd678-e966-4af6-a178-57dc13241b36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire2"",
                    ""type"": ""Button"",
                    ""id"": ""d48fae71-8132-4871-b37e-035f3608a16f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire3"",
                    ""type"": ""Button"",
                    ""id"": ""0d0d7dad-3dd2-496a-9ccd-023dba68c63a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""2745342f-e4ff-4bab-8667-40ed53ffcf92"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePoint"",
                    ""type"": ""Value"",
                    ""id"": ""1c02685e-514e-4f41-9106-5ff202ff14bf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""7a2d65bb-93bd-40d4-aa59-2e02fbad3b9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""634f3de3-04cf-42fb-a102-8c49ef6c3d91"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c46c478d-6830-43dd-a09c-9bfa0ff334ca"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c9d72c32-5cee-4184-8a76-e5d3e0ee892c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""62ee7d9a-e997-450f-959a-ec50f90c7a86"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""373dd8ed-b31b-4b54-9f75-56f074aadbe4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""04603d8c-51fb-48a9-8e37-dba21d907bde"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""315338d7-0857-474a-a056-b253ceb8178c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""eb8fa645-2769-4e56-89a6-25fbe269cee5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5720d32a-8e61-4831-9239-8b7032ae58f0"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""25591df9-3c36-4feb-bdd1-21749b6382c7"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c470f18-168e-4bbd-ad76-b74c4173aa70"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4875dc10-42d8-490c-9f46-fdf8a7775369"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16da4aaf-b59d-4df2-b96c-74ed6faeab7c"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4f11de9-706b-4929-b19f-cb04cf1c922d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""042e1fb6-a421-4cbf-85a3-0058ce2e74d9"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Fire1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6c79e42-06c4-42eb-9f57-08f203d06d0b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c622a9e-5ba7-4e2b-b183-83e299d8588c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Fire2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4b6be70-8485-4766-924e-d2e5892fab21"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df36a146-7c7a-43d2-b42c-5fac0a5f91d3"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Fire3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9df3fe5-b750-4d78-9ce2-ec19fce6f738"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePoint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // BasePC
            m_BasePC = asset.FindActionMap("BasePC", throwIfNotFound: true);
            m_BasePC_Moving = m_BasePC.FindAction("Moving", throwIfNotFound: true);
            m_BasePC_Jump = m_BasePC.FindAction("Jump", throwIfNotFound: true);
            m_BasePC_Fire = m_BasePC.FindAction("Fire", throwIfNotFound: true);
            m_BasePC_Fire1 = m_BasePC.FindAction("Fire1", throwIfNotFound: true);
            m_BasePC_Fire2 = m_BasePC.FindAction("Fire2", throwIfNotFound: true);
            m_BasePC_Fire3 = m_BasePC.FindAction("Fire3", throwIfNotFound: true);
            m_BasePC_Mouse = m_BasePC.FindAction("Mouse", throwIfNotFound: true);
            m_BasePC_MousePoint = m_BasePC.FindAction("MousePoint", throwIfNotFound: true);
            m_BasePC_Pause = m_BasePC.FindAction("Pause", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // BasePC
        private readonly InputActionMap m_BasePC;
        private List<IBasePCActions> m_BasePCActionsCallbackInterfaces = new List<IBasePCActions>();
        private readonly InputAction m_BasePC_Moving;
        private readonly InputAction m_BasePC_Jump;
        private readonly InputAction m_BasePC_Fire;
        private readonly InputAction m_BasePC_Fire1;
        private readonly InputAction m_BasePC_Fire2;
        private readonly InputAction m_BasePC_Fire3;
        private readonly InputAction m_BasePC_Mouse;
        private readonly InputAction m_BasePC_MousePoint;
        private readonly InputAction m_BasePC_Pause;
        public struct BasePCActions
        {
            private @ControlsData m_Wrapper;
            public BasePCActions(@ControlsData wrapper) { m_Wrapper = wrapper; }
            public InputAction @Moving => m_Wrapper.m_BasePC_Moving;
            public InputAction @Jump => m_Wrapper.m_BasePC_Jump;
            public InputAction @Fire => m_Wrapper.m_BasePC_Fire;
            public InputAction @Fire1 => m_Wrapper.m_BasePC_Fire1;
            public InputAction @Fire2 => m_Wrapper.m_BasePC_Fire2;
            public InputAction @Fire3 => m_Wrapper.m_BasePC_Fire3;
            public InputAction @Mouse => m_Wrapper.m_BasePC_Mouse;
            public InputAction @MousePoint => m_Wrapper.m_BasePC_MousePoint;
            public InputAction @Pause => m_Wrapper.m_BasePC_Pause;
            public InputActionMap Get() { return m_Wrapper.m_BasePC; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(BasePCActions set) { return set.Get(); }
            public void AddCallbacks(IBasePCActions instance)
            {
                if (instance == null || m_Wrapper.m_BasePCActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_BasePCActionsCallbackInterfaces.Add(instance);
                @Moving.started += instance.OnMoving;
                @Moving.performed += instance.OnMoving;
                @Moving.canceled += instance.OnMoving;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Fire1.started += instance.OnFire1;
                @Fire1.performed += instance.OnFire1;
                @Fire1.canceled += instance.OnFire1;
                @Fire2.started += instance.OnFire2;
                @Fire2.performed += instance.OnFire2;
                @Fire2.canceled += instance.OnFire2;
                @Fire3.started += instance.OnFire3;
                @Fire3.performed += instance.OnFire3;
                @Fire3.canceled += instance.OnFire3;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @MousePoint.started += instance.OnMousePoint;
                @MousePoint.performed += instance.OnMousePoint;
                @MousePoint.canceled += instance.OnMousePoint;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }

            private void UnregisterCallbacks(IBasePCActions instance)
            {
                @Moving.started -= instance.OnMoving;
                @Moving.performed -= instance.OnMoving;
                @Moving.canceled -= instance.OnMoving;
                @Jump.started -= instance.OnJump;
                @Jump.performed -= instance.OnJump;
                @Jump.canceled -= instance.OnJump;
                @Fire.started -= instance.OnFire;
                @Fire.performed -= instance.OnFire;
                @Fire.canceled -= instance.OnFire;
                @Fire1.started -= instance.OnFire1;
                @Fire1.performed -= instance.OnFire1;
                @Fire1.canceled -= instance.OnFire1;
                @Fire2.started -= instance.OnFire2;
                @Fire2.performed -= instance.OnFire2;
                @Fire2.canceled -= instance.OnFire2;
                @Fire3.started -= instance.OnFire3;
                @Fire3.performed -= instance.OnFire3;
                @Fire3.canceled -= instance.OnFire3;
                @Mouse.started -= instance.OnMouse;
                @Mouse.performed -= instance.OnMouse;
                @Mouse.canceled -= instance.OnMouse;
                @MousePoint.started -= instance.OnMousePoint;
                @MousePoint.performed -= instance.OnMousePoint;
                @MousePoint.canceled -= instance.OnMousePoint;
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
            }

            public void RemoveCallbacks(IBasePCActions instance)
            {
                if (m_Wrapper.m_BasePCActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IBasePCActions instance)
            {
                foreach (var item in m_Wrapper.m_BasePCActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_BasePCActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public BasePCActions @BasePC => new BasePCActions(this);
        public interface IBasePCActions
        {
            void OnMoving(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnFire(InputAction.CallbackContext context);
            void OnFire1(InputAction.CallbackContext context);
            void OnFire2(InputAction.CallbackContext context);
            void OnFire3(InputAction.CallbackContext context);
            void OnMouse(InputAction.CallbackContext context);
            void OnMousePoint(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
        }
    }
}
